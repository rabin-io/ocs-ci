name: Build Container Image

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - master
      - stable

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

env:
  REGISTRY: quay.io
  REGISTRY_NS: rabin-ci
  REGISTRY_IMAGE: ocs-ci

jobs:
  buildah:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Quay
        uses: redhat-actions/podman-login@v1
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}

      - name: Buildah Action
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ github.event.pull_request.head.label || github.ref_name || github.run_id }} ${{ github.sha }} latest stable
          containerfiles: |
            ./Docker_files/ocsci_container/Containerfile.ci
          build-args: |
            COMMIT=${{ github.sha }}
            BRANCH=${{ env.BRANCH }}
            LABEL=${{ github.event.pull_request.head.label }}
            HEAD_REF=${{ github.head_ref }}
            REF_NAME=${{ github.ref_name }}
            REF=${{ github.ref }}

      # Podman Login action (https://github.com/redhat-actions/podman-login) also be used to log in,
      # in which case 'username' and 'password' can be omitted.
      - name: Push To quay.io
        id: push-to-quay
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: ${{ env.REGISTRY }}/${{ env.REGISTRY_NS }}

      - name: Set expiration date for the hash tag
        run: |
          curl -sX PUT https://${{ env.REGISTRY }}/api/v1/repository/${{ env.REGISTRY_NS }}/${{ env.REGISTRY_IMAGE }}/tag/${{ github.sha }} \
            --header "Content-Type: application/json" \
            --header "Accept: application/json" \
            --data "{\"expiration\": $(date -d '+30 days' '+%s')}" \
            --oauth2-bearer ${{ secrets.QUAY_OAUTH2_TOKEN }}

      - name: Print image url
        run: echo "Image pushed to ${{ steps.push-to-quay.outputs.registry-paths }}"
